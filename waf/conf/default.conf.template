# Nginx configuration for both HTTP and SSL

server_tokens ${SERVER_TOKENS};

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# HTTP (non-SSL) server block
server {
    listen ${PORT} default_server;

    server_name ${SERVER_NAME};
    set $always_redirect ${NGINX_ALWAYS_TLS_REDIRECT};

    # Proxy to frontend
    location / {
        client_max_body_size 0;

        if ($always_redirect = on) {
            return 301 https://$host$request_uri;
        }

        set $upstream ${FRONTEND};
        include includes/cors.conf;
        include includes/proxy_backend.conf;      
    }

    # Proxy API calls to backend
    location /api/ {
        set $upstream ${BACKEND_API};       
        include includes/proxy_backend.conf;      
    }

    # Proxy WebSocket to backend
    location /ws/ {
        set $upstream ${BACKEND_WS};       
        include includes/proxy_backend.conf;
    }

    include includes/location_common.conf;
}

# HTTPS (SSL) server block
server {
    listen ${SSL_PORT} ssl;

    server_name ${SERVER_NAME};

    # SSL certificate and key
    ssl_certificate ${SSL_CERT};
    ssl_certificate_key ${SSL_CERT_KEY};

    # SSL settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    ssl_dhparam /etc/ssl/certs/dhparam-${SSL_DH_BITS}.pem;
    ssl_protocols ${SSL_PROTOCOLS};
    ssl_ciphers ${SSL_CIPHERS};
    ssl_prefer_server_ciphers ${SSL_PREFER_CIPHERS};
    ssl_stapling ${SSL_OCSP_STAPLING};
    ssl_stapling_verify ${SSL_OCSP_STAPLING};
    ssl_verify_client ${SSL_VERIFY};
    ssl_verify_depth ${SSL_VERIFY_DEPTH};


    # Proxy to frontend
    location / {

        client_max_body_size 0;
        
        set $upstream ${FRONTEND};
        include includes/cors.conf;
        include includes/proxy_backend.conf;          
    }

    # Proxy API calls to backend
    location /api/ {
        set $upstream ${BACKEND_API};       
        include includes/proxy_backend.conf;         
    }

    # Proxy WebSocket to backend
    location /ws/ {
        set $upstream ${BACKEND_WS};       
        include includes/proxy_backend.conf;
    }

    include includes/location_common.conf;
}