# Define upstream services
upstream front_service {
    server front:80;
}

upstream back_service {
    server back:8000;
}

# HTTPS server block
server {
    listen 443 ssl;  
    server_name _;  #Serving all domains (_)

    # SSL certificate and key
    ssl_certificate /etc/nginx/certs/nginx.crt;
    ssl_certificate_key /etc/nginx/certs/nginx.key;

    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;

    # Proxy to frontend
    location / {
        proxy_pass http://front_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy API calls to backend
    location /api/ {
        proxy_pass http://back_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy WebSocket to backend
    location /ws/ {
        proxy_pass http://back_service/;

        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 80;
    server_name _;  # Serving all domains (_)

    # Proxy to frontend
    location / {
        proxy_pass http://front_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy API calls to backend
    location /api/ {
        proxy_pass http://back_service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy WebSocket to backend
    location /ws/ {
        proxy_pass http://back_service/;

        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTP-to-HTTPS redirect (disabled for dev)
# server {
#     listen 80;
#     server_name _;

#     # Redirect all HTTP traffic to HTTPS
#     return 301 https://$host$request_uri;
# }