services:

#Reverse-proxy + WAF
  waf:
    container_name: waf
    build:
      context: ./waf
    image: waf
    ports:
      - "8080:80"
      - "8443:443"
    depends_on:
      - front
      - back
    networks:
      - pongnet

  front:
    container_name: front
    build:
      context: ./front
    image: front
    # ports:
    #   - "8080:80"
    #   - "8443:443"
    networks:
      - pongnet
    volumes:
    - ./front/src:/usr/share/nginx/html
    # environment:
    #   - VIRTUAL_HOST=jgravalo.42.fr
    #   - LETSENCRYPT_HOST=jgravalo.42.fr
    #   - LETSENCRYPT_EMAIL=jgravalo@student.42barcelona.com

  back:
    container_name: back
    build:
      context: ./back
    image: back
    # ports:
    #   - "8000:8000"
    environment:
      - DJANGO_DB_NAME=postgres
      - DJANGO_DB_USER=postgres
      - DJANGO_DB_PASSWORD=Jesus20022
      - DJANGO_DB_HOST=db
      - DJANGO_DB_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pongnet
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: db
    build:
      context: ./db
    container_name: db
    networks:
      - pongnet
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
    name: pgdata

networks:
  pongnet:
    name: pongnet
    driver: bridge
